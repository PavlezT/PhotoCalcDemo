name: Checks for proper commit in branch

on:
  pull_request:
    branches: [ dev ]
    types: [ opened, synchronize, edited, reopened, ready_for_review ]

jobs:
  one-commit-in-branch:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.head_ref, 'temp') || !contains(github.head_ref, 'dev_') }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - name: Check commits count
      id: check_count
      run: |
        echo "COMMITS_COUNT=$(git rev-list --count origin/dev..HEAD --no-merges)" >> $GITHUB_OUTPUT
    - name: Error if more then 1 commit
      if: ${{steps.check_count.outputs.COMMITS_COUNT > 1}}
      run: |
        echo "first_parent:$(git rev-list --count origin/dev..HEAD --no-merges)"
        echo "condution:${{steps.check_count.outputs.COMMITS_COUNT}}"
        exit 1

  proper-commit-name:
      runs-on: ubuntu-latest
      if: ${{ !contains(github.head_ref, 'temp') || !contains(github.head_ref, 'dev_') }}
      steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Get commit title
        id: commit_title
        run: |
          echo "${{github.head_ref}}"
          git switch ${{github.head_ref}}
          echo "COMMIT_TITLE=$(git log origin/dev..HEAD --pretty=%B | tail -2)" >> $GITHUB_OUTPUT
          echo "commit_title:$(git log origin/dev..HEAD --pretty=%B | tail -2)"
      - name: Error if commit is not PR title
        if: ${{steps.commit_title.outputs.COMMIT_TITLE != github.event.pull_request.title}}
        run: |
          echo "pr_title:${{github.event.pull_request.title}}"
          exit 1